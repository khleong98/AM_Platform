{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { BASE_API_URL } from './apiEndpoint.js';\nexport default {\n  __name: 'userReferral',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const emails = ref([]);\n    const selectedEmail = ref('');\n    const referralTree = ref(null);\n    const fetchEmails = async () => {\n      try {\n        const response = await axios.get(BASE_API_URL + 'email');\n        emails.value = response.data.email;\n      } catch (error) {\n        console.error('Error fetching emails:', error);\n      }\n    };\n    const fetchReferralTree = async () => {\n      if (!selectedEmail.value) return;\n      try {\n        const response = await axios.get(BASE_API_URL + 'referral', {\n          params: {\n            email: selectedEmail.value\n          }\n        });\n        referralTree.value = response.data.referral;\n      } catch (error) {\n        console.error('Error fetching referral tree:', error);\n      }\n    };\n    const formatReferralTree = (tree, level = 0) => {\n      let formattedTree = '';\n      for (const [email, subTree] of Object.entries(tree)) {\n        formattedTree += `${'>>>> '.repeat(level)}${email}\\n`;\n        for (const subTreeItem of subTree) {\n          formattedTree += formatReferralTree(subTreeItem, level + 1);\n        }\n      }\n      return formattedTree;\n    };\n    onMounted(() => {\n      fetchEmails();\n    });\n    const __returned__ = {\n      emails,\n      selectedEmail,\n      referralTree,\n      fetchEmails,\n      fetchReferralTree,\n      formatReferralTree,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get BASE_API_URL() {\n        return BASE_API_URL;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","BASE_API_URL","emails","selectedEmail","referralTree","fetchEmails","response","get","value","data","email","error","console","fetchReferralTree","params","referral","formatReferralTree","tree","level","formattedTree","subTree","Object","entries","repeat","subTreeItem"],"sources":["C:/Users/khleong/AM_Platform/frontend/src/views/userReferral.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label for=\"emailDropdown\">Select Email:</label>\r\n    <select id=\"emailDropdown\" v-model=\"selectedEmail\" @change=\"fetchReferralTree\">\r\n      <option v-for=\"email in emails\" :key=\"email\" :value=\"email\">{{ email }}</option>\r\n    </select>\r\n\r\n    <div v-if=\"referralTree\">\r\n      <h3>Referral Tree:</h3>\r\n      <pre>{{ formatReferralTree(referralTree) }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { BASE_API_URL } from './apiEndpoint.js';\r\n\r\nconst emails = ref([]);\r\nconst selectedEmail = ref('');\r\nconst referralTree = ref(null);\r\n\r\nconst fetchEmails = async () => {\r\n  try {\r\n    const response = await axios.get(BASE_API_URL + 'email');\r\n    emails.value = response.data.email;\r\n  } catch (error) {\r\n    console.error('Error fetching emails:', error);\r\n  }\r\n};\r\n\r\nconst fetchReferralTree = async () => {\r\n  if (!selectedEmail.value) return;\r\n\r\n  try {\r\n    const response = await axios.get(BASE_API_URL + 'referral', {\r\n      params: { email: selectedEmail.value },\r\n    });\r\n    referralTree.value = response.data.referral;\r\n  } catch (error) {\r\n    console.error('Error fetching referral tree:', error);\r\n  }\r\n};\r\n\r\nconst formatReferralTree = (tree, level = 0) => {\r\n  let formattedTree = '';\r\n  for (const [email, subTree] of Object.entries(tree)) {\r\n    formattedTree += `${'>>>> '.repeat(level)}${email}\\n`;\r\n    for (const subTreeItem of subTree) {\r\n      formattedTree += formatReferralTree(subTreeItem, level + 1);\r\n    }\r\n  }\r\n  return formattedTree;\r\n};\r\n\r\nonMounted(() => {\r\n  fetchEmails();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\npre {\r\n  white-space: pre-wrap;\r\n  font-family: monospace;\r\n}\r\n</style>\r\n"],"mappings":"AAeA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,kBAAkB;;;;;;;IAE/C,MAAMC,MAAM,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMK,aAAa,GAAGL,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMM,YAAY,GAAGN,GAAG,CAAC,IAAI,CAAC;IAE9B,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACN,YAAY,GAAG,OAAO,CAAC;QACxDC,MAAM,CAACM,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACC,KAAK;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI,CAACV,aAAa,CAACK,KAAK,EAAE;MAE1B,IAAI;QACF,MAAMF,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACN,YAAY,GAAG,UAAU,EAAE;UAC1Da,MAAM,EAAE;YAAEJ,KAAK,EAAEP,aAAa,CAACK;UAAM;QACvC,CAAC,CAAC;QACFJ,YAAY,CAACI,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACM,QAAQ;MAC7C,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAED,MAAMK,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,KAAK,GAAG,CAAC,KAAK;MAC9C,IAAIC,aAAa,GAAG,EAAE;MACtB,KAAK,MAAM,CAACT,KAAK,EAAEU,OAAO,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE;QACnDE,aAAa,IAAK,GAAE,OAAO,CAACI,MAAM,CAACL,KAAK,CAAE,GAAER,KAAM,IAAG;QACrD,KAAK,MAAMc,WAAW,IAAIJ,OAAO,EAAE;UACjCD,aAAa,IAAIH,kBAAkB,CAACQ,WAAW,EAAEN,KAAK,GAAG,CAAC,CAAC;QAC7D;MACF;MACA,OAAOC,aAAa;IACtB,CAAC;IAEDpB,SAAS,CAAC,MAAM;MACdM,WAAW,CAAC,CAAC;IACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}