{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-505ec6d0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"emailDropdown\"\n}, \"Select Email:\", -1 /* HOISTED */));\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Referral Tree:\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"select\", {\n    id: \"emailDropdown\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedEmail = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.fetchReferralTree && $options.fetchReferralTree(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.emails, email => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: email,\n      value: email\n    }, _toDisplayString(email), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedEmail]]), $data.referralTree ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"pre\", null, _toDisplayString($options.formatReferralTree($data.referralTree)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","for","key","_createElementBlock","_hoisted_1","id","_cache","$event","$data","selectedEmail","onChange","args","$options","fetchReferralTree","_Fragment","_renderList","emails","email","value","_hoisted_2","referralTree","_hoisted_3","_hoisted_4","_toDisplayString","formatReferralTree","_createCommentVNode"],"sources":["C:\\Users\\khleong\\AM_Platform\\frontend\\src\\components\\userReferral.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label for=\"emailDropdown\">Select Email:</label>\r\n    <select id=\"emailDropdown\" v-model=\"selectedEmail\" @change=\"fetchReferralTree\">\r\n      <option v-for=\"email in emails\" :key=\"email\" :value=\"email\">{{ email }}</option>\r\n    </select>\r\n\r\n    <div v-if=\"referralTree\">\r\n      <h3>Referral Tree:</h3>\r\n      <pre>{{ formatReferralTree(referralTree) }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      emails: [],\r\n      selectedEmail: '',\r\n      referralTree: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchEmails();\r\n  },\r\n  methods: {\r\n    async fetchEmails() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/referral');\r\n        console.log(\"Niasing:\",response.data.email)\r\n        this.emails = response.data.email;\r\n      } catch (error) {\r\n        console.error('Error fetching emails:', error);\r\n      }\r\n    },\r\n    async fetchReferralTree() {\r\n      if (!this.selectedEmail) return;\r\n\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/referral', {\r\n          params: { email: this.selectedEmail },\r\n        });\r\n        this.referralTree = response.data.referral;\r\n      } catch (error) {\r\n        console.error('Error fetching referral tree:', error);\r\n      }\r\n    },\r\n    formatReferralTree(tree, level = 0) {\r\n      let formattedTree = '';\r\n      for (const [email, subTree] of Object.entries(tree)) {\r\n        formattedTree += `${'>>>> '.repeat(level)}${email}\\n`;\r\n        for (const subTreeItem of subTree) {\r\n          formattedTree += this.formatReferralTree(subTreeItem, level + 1);\r\n        }\r\n      }\r\n      return formattedTree;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\npre {\r\n  white-space: pre-wrap;\r\n  font-family: monospace;\r\n}\r\n</style>"],"mappings":";;gEAEIA,mBAAA,CAAgD;EAAzCC,GAAG,EAAC;AAAe,GAAC,eAAa;mBAF5C;;EAAAC,GAAA;AAAA;gEAQMF,mBAAA,CAAuB,YAAnB,gBAAc;;uBAPtBG,mBAAA,CAUM,cATJC,UAAgD,E,gBAChDJ,mBAAA,CAES;IAFDK,EAAE,EAAC,eAAe;IAH9B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGwCC,KAAA,CAAAC,aAAa,GAAAF,MAAA;IAAGG,QAAM,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;yBAC3ER,mBAAA,CAAgFW,SAAA,QAJtFC,WAAA,CAI8BP,KAAA,CAAAQ,MAAM,EAAfC,KAAK;yBAApBd,mBAAA,CAAgF;MAA/CD,GAAG,EAAEe,KAAK;MAAGC,KAAK,EAAED;wBAAUA,KAAK,wBAJ1EE,UAAA;2FAGwCX,KAAA,CAAAC,aAAa,E,GAItCD,KAAA,CAAAY,YAAY,I,cAAvBjB,mBAAA,CAGM,OAVVkB,UAAA,GAQMC,UAAuB,EACvBtB,mBAAA,CAAiD,aAAAuB,gBAAA,CAAzCX,QAAA,CAAAY,kBAAkB,CAAChB,KAAA,CAAAY,YAAY,kB,KAT7CK,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}