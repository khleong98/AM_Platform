{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      emails: [],\n      selectedEmail: '',\n      referralTree: null\n    };\n  },\n  created() {\n    this.fetchEmails();\n  },\n  methods: {\n    async fetchEmails() {\n      try {\n        const response = await axios.get('/referral');\n        this.emails = response.data.email;\n      } catch (error) {\n        console.error('Error fetching emails:', error);\n      }\n    },\n    async fetchReferralTree() {\n      if (!this.selectedEmail) return;\n      try {\n        const response = await axios.get('/referral', {\n          params: {\n            email: this.selectedEmail\n          }\n        });\n        this.referralTree = response.data.referral;\n      } catch (error) {\n        console.error('Error fetching referral tree:', error);\n      }\n    },\n    formatReferralTree(tree, level = 0) {\n      let formattedTree = '';\n      for (const [email, subTree] of Object.entries(tree)) {\n        formattedTree += `${'>>>> '.repeat(level)}${email}\\n`;\n        for (const subTreeItem of subTree) {\n          formattedTree += this.formatReferralTree(subTreeItem, level + 1);\n        }\n      }\n      return formattedTree;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","emails","selectedEmail","referralTree","created","fetchEmails","methods","response","get","email","error","console","fetchReferralTree","params","referral","formatReferralTree","tree","level","formattedTree","subTree","Object","entries","repeat","subTreeItem"],"sources":["C:\\Users\\khleong\\AM_Platform\\frontend\\src\\components\\userReferral.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label for=\"emailDropdown\">Select Email:</label>\r\n    <select id=\"emailDropdown\" v-model=\"selectedEmail\" @change=\"fetchReferralTree\">\r\n      <option v-for=\"email in emails\" :key=\"email\" :value=\"email\">{{ email }}</option>\r\n    </select>\r\n\r\n    <div v-if=\"referralTree\">\r\n      <h3>Referral Tree:</h3>\r\n      <pre>{{ formatReferralTree(referralTree) }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      emails: [],\r\n      selectedEmail: '',\r\n      referralTree: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchEmails();\r\n  },\r\n  methods: {\r\n    async fetchEmails() {\r\n      try {\r\n        const response = await axios.get('/referral');\r\n        this.emails = response.data.email;\r\n      } catch (error) {\r\n        console.error('Error fetching emails:', error);\r\n      }\r\n    },\r\n    async fetchReferralTree() {\r\n      if (!this.selectedEmail) return;\r\n\r\n      try {\r\n        const response = await axios.get('/referral', {\r\n          params: { email: this.selectedEmail },\r\n        });\r\n        this.referralTree = response.data.referral;\r\n      } catch (error) {\r\n        console.error('Error fetching referral tree:', error);\r\n      }\r\n    },\r\n    formatReferralTree(tree, level = 0) {\r\n      let formattedTree = '';\r\n      for (const [email, subTree] of Object.entries(tree)) {\r\n        formattedTree += `${'>>>> '.repeat(level)}${email}\\n`;\r\n        for (const subTreeItem of subTree) {\r\n          formattedTree += this.formatReferralTree(subTreeItem, level + 1);\r\n        }\r\n      }\r\n      return formattedTree;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\npre {\r\n  white-space: pre-wrap;\r\n  font-family: monospace;\r\n}\r\n</style>"],"mappings":"AAeA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE,EAAE;MACjBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,WAAW,CAAC;QAC7C,IAAI,CAACP,MAAK,GAAIM,QAAQ,CAACP,IAAI,CAACS,KAAK;MACnC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACD,MAAME,iBAAiBA,CAAA,EAAG;MACxB,IAAI,CAAC,IAAI,CAACV,aAAa,EAAE;MAEzB,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,WAAW,EAAE;UAC5CK,MAAM,EAAE;YAAEJ,KAAK,EAAE,IAAI,CAACP;UAAc;QACtC,CAAC,CAAC;QACF,IAAI,CAACC,YAAW,GAAII,QAAQ,CAACP,IAAI,CAACc,QAAQ;MAC5C,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACDK,kBAAkBA,CAACC,IAAI,EAAEC,KAAI,GAAI,CAAC,EAAE;MAClC,IAAIC,aAAY,GAAI,EAAE;MACtB,KAAK,MAAM,CAACT,KAAK,EAAEU,OAAO,KAAKC,MAAM,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE;QACnDE,aAAY,IAAM,GAAE,OAAO,CAACI,MAAM,CAACL,KAAK,CAAE,GAAER,KAAM,IAAG;QACrD,KAAK,MAAMc,WAAU,IAAKJ,OAAO,EAAE;UACjCD,aAAY,IAAK,IAAI,CAACH,kBAAkB,CAACQ,WAAW,EAAEN,KAAI,GAAI,CAAC,CAAC;QAClE;MACF;MACA,OAAOC,aAAa;IACtB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}